class Solution {
    
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        int vis[] = new int[V];
        Arrays.fill(vis, 0);
        
        for(int i=0;i<V;i++){
            if(vis[i] == 0){
                if(dfs(i, -1, adj, vis) == true) return true;
            }
        }
        return false;
    }
    private boolean dfs(int node, int parent, ArrayList<ArrayList<Integer>> adj, int vis[]){
        vis[node] = 1;
        
        for(Integer it : adj.get(node)){
            if(vis[it] == 0){
                if(dfs(it, node, adj, vis) == true) return true;
            }
            else if(it != parent)   return true;
        }
        return false;
    }
}
