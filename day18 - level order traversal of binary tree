class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {

        List<List<Integer>> ans = new ArrayList<>();
        if(root == null)  return ans;

        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);

        while(!q.isEmpty()){
            int levelNum = q.size();
            List<Integer> sublist = new ArrayList<Integer>();
            
            for(int i=0; i < levelNum; i++){
                if(q.peek().left != null)  q.add(q.peek().left);
                if(q.peek().right != null)  q.add(q.peek().right);
                sublist.add(q.poll().val);
            }
            ans.add(sublist);
        }
        return ans;
    }
}
