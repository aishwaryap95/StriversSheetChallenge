class Solve {
    int[] findTwoElement(int arr[], int n) {
        int ans[] = new int[2];
        
        int a[] = new int[arr.length+1];
        
        for(int i=0;i<arr.length;i++){
            a[arr[i]]++;
        }
        for(int i=1;i<a.length;i++){
            if(a[i] > 1){
                ans[0] = i;
            }
            if(a[i] == 0){
                ans[1] = i;
            }
        }
        
        return ans;
    }
}

---------------------------------------------------------

worked for 200 cases only, on GFG

class Solve {
    int[] findTwoElement(int a[], int n) {
        
        long SN = (n * (n + 1)) / 2;
        long S2N = (n * (n + 1) * (2 * n + 1)) / 6;

        long S = 0, S2 = 0;
        for (int i = 0; i < n; i++) {
            S += a[i];
            S2 += (long)a[i] * (long)a[i];
        }

        long val1 = S - SN;

        long val2 = S2 - S2N;

        val2 = val2 / val1;

        long x = (val1 + val2) / 2;
        long y = x - val1;

        int[] ans = {(int)x, (int)y};
        return ans;
    }
}
