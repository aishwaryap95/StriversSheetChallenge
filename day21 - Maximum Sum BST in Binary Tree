class Solution {
    public int maxSumBST(TreeNode root) {
        int[] res = dfs(root);
        return Math.max(res[3],0);
    }
    public int[] dfs(TreeNode root) {
        if(root == null) 
            return new int[]{Integer.MAX_VALUE, Integer.MIN_VALUE,0,Integer.MIN_VALUE};
        
        int[] left = dfs(root.left);
        int[] right = dfs(root.right);
        
        if(root.val>left[1] && root.val<right[0]) {
            int min = Math.min(left[0],root.val);
            int max = Math.max(right[1],root.val);
            int sum = left[2]+right[2]+root.val;
            int maxSum = Math.max(sum,Math.max(left[3],right[3]));
            return new int[]{min,max,sum,maxSum};
        }
        else {
            return new int[]{Integer.MIN_VALUE,Integer.MAX_VALUE,Math.max(left[2],right[2]),Math.max(left[3],right[3])};
        }
    }
}
