

class Solution {
    private static int f(int i, int j, String s1, String s2, int dp[][]){
        if(i<0) return j+1;
        if(j<0) return i+1;
        
        if(dp[i][j] != -1) return dp[i][j];
        
        if(s1.charAt(i) == s2.charAt(j))   return dp[i][j] = f(i-1,j-1,s1,s2,dp);
        return dp[i][j] = 1 + Math.min(  f(i-1, j, s1, s2, dp) ,
                    Math.min( f(i, j-1, s1, s2, dp) , 
                              f(i-1, j-1, s1, s2, dp)));
    }
    public int editDistance(String s, String t) {
        int n = s.length();
        int m = t.length();
        int dp[][] = new int[n][m];
        
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                dp[i][j] = -1;
        
        return f( n-1, m-1, s, t, dp);
    }
}
