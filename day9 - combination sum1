class Solution {
    public void recur(int ind, int arr[], int target, List<List<Integer>> res,ArrayList<Integer> lst ){
        if(ind==arr.length ){
            if( target==0)
                res.add(new ArrayList<>(lst));
            return;
        }

        if(arr[ind] <= target){
            lst.add(arr[ind]);
            recur(ind, arr, target-arr[ind], res, lst);
            lst.remove(lst.size()-1);
        }
        
        recur(ind+1, arr, target, res, lst);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        recur(0, candidates, target, res, new ArrayList<>());
        return res;
    }
}
