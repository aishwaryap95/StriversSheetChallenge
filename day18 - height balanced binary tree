class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null) return true;
        
        int lh = height(root.left);
        int rh = height(root.right);
	    
	    if((Math.abs(lh - rh) <= 1) && isBalanced(root.left)  && isBalanced(root.right) ) 
	        return true;
	  
	    return false;
    }
    public int height(TreeNode root){
        if(root == null)  return 0;
        
	    int lh = height(root.left);
	    int rh = height(root.right);
	    
	    return 1 + Math.max(lh,rh);
    }
}

-------------------------------------------------------------------------------


class Solution {
    public boolean isBalanced(TreeNode root) {
        return bal(root) != -1;
    }
    private int bal(TreeNode root){
        if(root == null) return 0;

        int left_height = bal(root.left);
        if(left_height == -1) return -1;

        int right_height = bal(root.right);
        if(right_height == -1) return -1;

        if(Math.abs(left_height - right_height) > 1) return -1;

        return 1+Math.max(left_height, right_height);
    }
}
