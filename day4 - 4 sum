class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> list = new ArrayList<>();
        int n = nums.length;
        Arrays.sort(nums);

        if(n<4) return list;

        for(int i=0;i<n-3;i++){
            for(int j=i+1;j<n-2;j++){
                int low = j+1, high = n-1;
                long newTarget = (long) target-nums[j]-nums[i];
                while(low < high){
                    if(nums[low]+nums[high] == newTarget){
                        list.add(Arrays.asList(nums[i],nums[j],nums[low],nums[high]));

                        while(low<high && nums[low]==nums[low+1]) low++;
                        while(low<high && nums[high]==nums[high-1]) high--;
                        low++; high--;
                    }
                    else if(nums[low]+nums[high] < newTarget) low++;
                    else high--;
                }
                while(j<n-2 && nums[j+1]==nums[j]) ++j;
            }
            while(i<n-3 && nums[i+1]==nums[i]) ++i;
        }
        return list;
    }
}
