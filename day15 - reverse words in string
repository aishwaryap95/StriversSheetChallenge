class Solution {
    public String reverseWords(String s) {
        // Reverse the entire string
        StringBuilder sb = new StringBuilder(s);
        sb.reverse();
        s = sb.toString();

        int start = 0; // Start index of the current word
        int end = 0;   // End index of the current word
        int i = 0;     // Current index
        int n = s.length(); // Length of the string

        sb = new StringBuilder(); // Create a new StringBuilder to store the result

        while (i < n) {
            // Skip leading spaces
            while (i < n && s.charAt(i) == ' ')
                i++;

            // Find the end of the current word
            start = i;
            while (i < n && s.charAt(i) != ' ')
                i++;

            if (start < i) {
                // Reverse the current word
                StringBuilder reversedWord = new StringBuilder(s.substring(start, i));
                reversedWord.reverse();

                // Add the reversed word to the result StringBuilder
                sb.append(reversedWord);

                // Add a space after the reversed word
                sb.append(' ');
            }
        }

        // Remove extra space at the end if present
        if (sb.length() > 0)
            sb.setLength(sb.length() - 1);

        return sb.toString();
    }
}
