class Solution
{
    static ArrayList<Integer> topView(Node root)
    {
        ArrayList<Integer> ans = new ArrayList<>();
        
        if(root == null) return ans;
        
        Map<Integer , Integer> map = new TreeMap<>();
        
        Queue<Pair> q = new LinkedList<Pair>();
        q.add(new Pair(root, 0));
        
        while(!q.isEmpty()){
            Pair it = q.poll();
            int line = it.line;
            Node tmp = it.node;
            
            if(map.get(line) == null)  map.put(line, tmp.data);
            if(tmp.left != null)  q.add(new Pair(tmp.left, line-1));
            if(tmp.right != null) q.add(new Pair(tmp.right, line+1));
        }
        
        for(Map.Entry<Integer,Integer> entry : map.entrySet())
            ans.add(entry.getValue());
            
        return ans;
    }
}
class Pair{
    Node node;
    int line;
    public Pair(Node n, int l){
        node = n;
        line = l;
    }
}
