class Solution
{   
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
	static int findLongestConseqSubseq(int arr[], int n)
	{
        int ans = 0, count = 1;
        HashSet<Integer> set = new HashSet<>();
 
        for (int i = 0; i < n; i++) {
           set.add(arr[i]);
        }
        
        for (int i = 0; i < n; i++) {
            if(!set.contains(arr[i]-1)) {
                int j = arr[i];
                while(set.contains(j)){
                    //this will improve runtime by avoiding the repetitive counts of elements
                    set.remove(Integer.valueOf(j));
                    j++;
                }
                if (ans < j - arr[i])
                    ans = j - arr[i];
            }
        }
        return ans;
	}
}
